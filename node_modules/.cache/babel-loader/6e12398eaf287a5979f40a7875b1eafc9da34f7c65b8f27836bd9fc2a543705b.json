{"ast":null,"code":"import React from\"react\";import\"./ChartBar.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChartBar=function ChartBar(props){var barFill=\"0%\";if(props.maxVal>0){barFill=Math.round(props.value/props.maxVal*100)+\"%\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"ChartBar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__inner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__fill\",style:{height:barFill}})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__label\",children:props.value})]});};export default ChartBar;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ChartBar","props","barFill","maxVal","Math","round","value","className","children","style","height"],"sources":["I:/React/01-starting-setup/src/Components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFill = \"0%\";\r\n  if (props.maxVal > 0) {\r\n    barFill = Math.round((props.value / props.maxVal) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"ChartBar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style = {{ height: barFill }} ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.value}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACxB,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAK,CAC1B,GAAI,CAAAC,OAAO,CAAG,IAAI,CAClB,GAAID,KAAK,CAACE,MAAM,CAAG,CAAC,CAAE,CACpBD,OAAO,CAAGE,IAAI,CAACC,KAAK,CAAEJ,KAAK,CAACK,KAAK,CAAGL,KAAK,CAACE,MAAM,CAAI,GAAG,CAAC,CAAG,GAAG,CAChE,CACA,mBACEJ,KAAA,QAAKQ,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBX,IAAA,QAAKU,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BX,IAAA,QAAKU,SAAS,CAAC,iBAAiB,CAACE,KAAK,CAAI,CAAEC,MAAM,CAAER,OAAQ,CAAE,EAAQ,EAClE,cACNL,IAAA,QAAKU,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAEP,KAAK,CAACK,KAAK,EAAO,GACjD,CAEV,CAAC,CAED,cAAe,CAAAN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}