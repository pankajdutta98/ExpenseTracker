{"ast":null,"code":"import React__default, { Fragment } from 'react';\nimport { L as Label, u as useForm, F as Form, H as HeaderText, S as Spacer, E as EmailInput, I as Input, P as PasswordInput, a as SubmitButton, b as SecondaryButton } from './index.esm-189a9937.js';\nimport { E as ErrorText } from './ErrorText-6391e3af.js';\nimport { _ as _extends, u as useEasybase } from './index-775190d4.js';\nimport { s as styled, t as toast } from './Auth-25393280.js';\nconst SelectContainer = styled.div({\n  position: 'relative',\n  display: 'inline',\n  width: '100%',\n  maxWidth: '100%',\n  cursor: 'pointer',\n  '&:after': {\n    content: \"''\",\n    width: 0,\n    height: 0,\n    position: 'absolute',\n    pointerEvents: 'none',\n    top: '.3em',\n    right: '.75em',\n    borderTop: '8px solid black',\n    opacity: 0.5,\n    borderLeft: '5px solid transparent',\n    borderRight: '5px solid transparent'\n  }\n});\nconst Select = styled.select({\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  appearance: 'none',\n  padding: '1em 2em 1em 1em',\n  border: 'none',\n  width: '100%',\n  fontFamily: 'inherit',\n  fontSize: 'inherit',\n  cursor: 'pointer',\n  outline: 'none',\n  '&::-ms-expand': {\n    display: 'none'\n  }\n});\nconst SelectOption = styled.option(props => _extends({\n  width: '100%'\n}, props.theme.selectOption ? _extends({}, props.theme.selectOption) : {}));\nfunction Select$1(props) {\n  return React__default.createElement(SelectContainer, null, React__default.createElement(Select, Object.assign({}, props, props.register(), {\n    defaultValue: \"\"\n  }), React__default.createElement(SelectOption, {\n    key: \"empty-option\",\n    value: \"\",\n    disabled: true,\n    hidden: true,\n    style: {\n      display: 'none'\n    }\n  }), props.options.map(e => React__default.createElement(SelectOption, {\n    key: \"option\" + e\n  }, e))));\n}\nconst GenderSelect = styled(Select$1)(props => _extends({\n  boxSizing: \"border-box\"\n}, props.theme.genderSelect ? _extends({}, props.theme.genderSelect) : {}));\nconst Root = styled.div({\n  position: \"relative\"\n});\nconst GenderLabel = styled(Label)(props => _extends({}, props.theme.genderSelectLabel ? _extends({}, props.theme.genderSelectLabel) : {}));\nfunction GenderSelect$1(props) {\n  return React__default.createElement(Root, null, React__default.createElement(GenderLabel, {\n    htmlFor: \"select-gender\"\n  }, \"Gender *\"), React__default.createElement(GenderSelect, Object.assign({\n    id: \"select-gender\"\n  }, props, {\n    options: [\"Male\", \"Female\", \"Prefer not to say\"]\n  })));\n}\nfunction SignUp(_ref) {\n  let {\n    setCurrentPage,\n    dictionary,\n    signUpFields\n  } = _ref;\n  var _errors$firstName, _errors$lastName, _errors$fullName, _errors$dateOfBirth, _errors$gender, _errors$phoneNumber, _errors$password, _errors$passwordConfi;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    signUp,\n    signIn\n  } = useEasybase();\n  const onSubmit = async formData => {\n    if (!formData.email || !formData.password || !formData.passwordConfirm) {\n      return;\n    }\n    if (formData.password !== formData.passwordConfirm) {\n      toast.error(dictionary.errorPasswordsDoNotMatch);\n      reset();\n      return;\n    }\n    const signUpAttrs = {\n      createdAt: new Date().toISOString()\n    };\n    for (const currField of [\"firstName\", \"lastName\", \"fullName\", \"dateOfBirth\", \"gender\", \"phoneNumber\"]) {\n      if (signUpFields[currField]) {\n        if (formData[currField]) {\n          signUpAttrs[currField] = \"\" + formData[currField];\n        } else {\n          toast.error(\"Missing sign up field value\");\n          return;\n        }\n      }\n    }\n    const signUpRes = await signUp(formData.email, formData.password, signUpAttrs);\n    if (signUpRes.success) {\n      setCurrentPage(\"SignIn\");\n      await signIn(formData.email, formData.password);\n    } else {\n      if (signUpRes.errorCode === \"BadFormat\") {\n        reset();\n        toast.error(dictionary.errorBadInputFormat);\n      } else if (signUpRes.errorCode === \"BadPasswordLength\") {\n        toast.error(dictionary.errorPasswordTooShort);\n      } else if (signUpRes.errorCode === \"UserExists\") {\n        reset();\n        toast.error(dictionary.errorUserAlreadyExists);\n      }\n    }\n  };\n  const passwordReqs = {\n    minLength: {\n      value: 8,\n      message: \"Password must be at least 8 characters long\"\n    },\n    maxLength: {\n      value: 100,\n      message: \"Password too long\"\n    },\n    pattern: {\n      value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{7,}$/gm,\n      message: \"Must contain a digit and uppercase and lowercase letters\"\n    }\n  };\n  return React__default.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, React__default.createElement(HeaderText, null, dictionary.signUpHeader), React__default.createElement(Spacer, {\n    size: \"medium\"\n  }), React__default.createElement(EmailInput, {\n    register: () => register(\"email\"),\n    label: dictionary.newEmailLabel,\n    disabled: isSubmitting\n  }), signUpFields.firstName && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(Input, {\n    register: () => register(\"firstName\", typeof signUpFields.firstName === \"boolean\" ? {} : signUpFields.firstName),\n    label: dictionary.newFirstNameLabel || \"\",\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$firstName = errors.firstName) == null ? void 0 : _errors$firstName.message\n  })), signUpFields.lastName && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(Input, {\n    register: () => register(\"lastName\", typeof signUpFields.lastName === \"boolean\" ? {} : signUpFields.lastName),\n    label: dictionary.newLastNameLabel || \"\",\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$lastName = errors.lastName) == null ? void 0 : _errors$lastName.message\n  })), signUpFields.fullName && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(Input, {\n    register: () => register(\"fullName\", typeof signUpFields.fullName === \"boolean\" ? {} : signUpFields.fullName),\n    label: dictionary.newFullNameLabel || \"\",\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$fullName = errors.fullName) == null ? void 0 : _errors$fullName.message\n  })), signUpFields.dateOfBirth && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(Input, {\n    type: \"date\",\n    register: () => register(\"dateOfBirth\", typeof signUpFields.dateOfBirth === \"boolean\" ? {} : signUpFields.dateOfBirth),\n    label: dictionary.newDateOfBirthLabel || \"\",\n    disabled: isSubmitting,\n    style: {\n      overflow: \"hidden\"\n    }\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$dateOfBirth = errors.dateOfBirth) == null ? void 0 : _errors$dateOfBirth.message\n  })), signUpFields.gender && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(GenderSelect$1, {\n    register: () => register(\"gender\", typeof signUpFields.gender === \"boolean\" ? {} : signUpFields.gender),\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$gender = errors.gender) == null ? void 0 : _errors$gender.message\n  })), signUpFields.phoneNumber && React__default.createElement(Fragment, null, React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(Input, {\n    type: \"tel\",\n    label: dictionary.newPhoneNumberLabel || \"\",\n    register: () => register(\"phoneNumber\", typeof signUpFields.phoneNumber === \"boolean\" ? {} : signUpFields.phoneNumber),\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$phoneNumber = errors.phoneNumber) == null ? void 0 : _errors$phoneNumber.message\n  })), React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(PasswordInput, {\n    register: () => register(\"password\", passwordReqs),\n    label: dictionary.newPasswordLabel,\n    autoComplete: \"new-password\",\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n  }), React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(PasswordInput, {\n    register: () => register(\"passwordConfirm\", passwordReqs),\n    label: dictionary.confirmNewPasswordLabel,\n    autoComplete: \"new-password\",\n    disabled: isSubmitting\n  }), React__default.createElement(ErrorText, {\n    value: (_errors$passwordConfi = errors.passwordConfirm) == null ? void 0 : _errors$passwordConfi.message\n  }), React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(SubmitButton, {\n    disabled: isSubmitting\n  }, dictionary.signUpSubmitButton), React__default.createElement(SecondaryButton, {\n    onClick: _ => setCurrentPage(\"SignIn\"),\n    disabled: isSubmitting\n  }, dictionary.backToSignIn));\n}\nexport { SignUp as default };","map":{"version":3,"names":["SelectContainer","styled","div","position","display","width","maxWidth","cursor","content","height","pointerEvents","top","right","borderTop","opacity","borderLeft","borderRight","Select","select","WebkitAppearance","MozAppearance","appearance","padding","border","fontFamily","fontSize","outline","SelectOption","option","props","_extends","theme","selectOption","React__default","createElement","Object","assign","register","defaultValue","key","value","disabled","hidden","style","options","map","e","GenderSelect","Select$1","boxSizing","genderSelect","Root","GenderLabel","Label","genderSelectLabel","htmlFor","id","setCurrentPage","dictionary","signUpFields","_ref","handleSubmit","formState","errors","isSubmitting","reset","useForm","signUp","signIn","useEasybase","onSubmit","formData","email","password","passwordConfirm","toast","error","errorPasswordsDoNotMatch","signUpAttrs","createdAt","Date","toISOString","currField","signUpRes","success","errorCode","errorBadInputFormat","errorPasswordTooShort","errorUserAlreadyExists","passwordReqs","minLength","message","maxLength","pattern","Form","HeaderText","signUpHeader","Spacer","size","EmailInput","label","newEmailLabel","firstName","Fragment","Input","newFirstNameLabel","ErrorText","_errors$firstName","lastName","newLastNameLabel","_errors$lastName","fullName","newFullNameLabel","_errors$fullName","dateOfBirth","type","newDateOfBirthLabel","overflow","_errors$dateOfBirth","gender","GenderSelect$1","_errors$gender","phoneNumber","newPhoneNumberLabel","_errors$phoneNumber","PasswordInput","newPasswordLabel","autoComplete","_errors$password","confirmNewPasswordLabel","_errors$passwordConfi","SubmitButton","signUpSubmitButton","SecondaryButton","onClick","_","backToSignIn"],"sources":["I:\\React\\01-starting-setup\\node_modules\\easybase-react\\src\\ui\\Auth\\components\\internal\\Select.tsx","I:\\React\\01-starting-setup\\node_modules\\easybase-react\\src\\ui\\Auth\\components\\GenderSelect.tsx","I:\\React\\01-starting-setup\\node_modules\\easybase-react\\src\\ui\\Auth\\pages\\SignUp.tsx"],"sourcesContent":["import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport styled from 'styled-components';\n\nconst SelectContainer = styled.div({\n    position: 'relative',\n    display: 'inline',\n    width: '100%',\n    maxWidth: '100%',\n    cursor: 'pointer',\n    '&:after': {\n        content: \"''\",\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        pointerEvents: 'none',\n        top: '.3em',\n        right: '.75em',\n        borderTop: '8px solid black',\n        opacity: 0.5,\n        borderLeft: '5px solid transparent',\n        borderRight: '5px solid transparent'\n    }\n})\n\nconst Select = styled.select({\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    appearance: 'none',\n    padding: '1em 2em 1em 1em',\n    border: 'none',\n    width: '100%',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    cursor: 'pointer',\n    outline: 'none',\n    '&::-ms-expand': {\n        display: 'none'\n    }\n})\n\nconst SelectOption = styled.option(props => ({\n    width: '100%',\n    ...(props.theme.selectOption ? { ...props.theme.selectOption } : {})\n}))\n\ninterface ISelect extends React.SelectHTMLAttributes<HTMLSelectElement> {\n    options: string[];\n    id: string;\n    register(): UseFormRegisterReturn;\n}\n\nexport default function (props: ISelect) {\n    return (\n        <SelectContainer>\n            <Select {...props} {...props.register()} defaultValue=\"\">\n                <SelectOption key=\"empty-option\" value=\"\" disabled hidden style={{ display: 'none' }} />\n                {props.options.map(e => <SelectOption key={\"option\" + e}>{e}</SelectOption>)}\n            </Select>\n        </SelectContainer>\n    )\n}\n","import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Label from './internal/Label';\nimport Select from './internal/Select';\n\nconst GenderSelect = styled(Select)(props => ({\n    boxSizing: \"border-box\",\n    ...(props.theme.genderSelect ? { ...props.theme.genderSelect } : {})\n}))\n\nconst Root = styled.div({\n    position: \"relative\"\n})\n\ninterface ISelect extends React.SelectHTMLAttributes<HTMLSelectElement> {\n    register(): UseFormRegisterReturn;\n}\n\nconst GenderLabel = styled(Label)(props => ({\n    ...(props.theme.genderSelectLabel ? { ...props.theme.genderSelectLabel } : {})\n}))\n\nexport default function (props: ISelect) {\n    return (\n        <Root>\n            <GenderLabel htmlFor=\"select-gender\">Gender *</GenderLabel>\n            <GenderSelect id=\"select-gender\" {...props} options={[\"Male\", \"Female\", \"Prefer not to say\"]} />\n        </Root>\n    )\n}\n","import React, { Fragment } from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport ErrorText from '../components/ErrorText';\nimport GenderSelect from '../components/GenderSelect';\nimport Input from '../components/internal/Input';\nimport { useForm } from 'react-hook-form';\nimport { IPage, ISignUpFields } from '../../uiTypes';\nimport toast from 'react-hot-toast';\nimport useEasybase from '../../../useEasybase';\n\ninterface ISignUpPage extends IPage {\n    signUpFields: ISignUpFields\n}\n\nexport default function ({ setCurrentPage, dictionary, signUpFields }: ISignUpPage) {\n    const { register, handleSubmit, formState: { errors, isSubmitting }, reset } = useForm();\n    const { signUp, signIn } = useEasybase();\n\n    const onSubmit = async (formData: Record<string, string>) => {\n        if (!formData.email || !formData.password || !formData.passwordConfirm) {\n            return;\n        }\n        if (formData.password !== formData.passwordConfirm) {\n            toast.error(dictionary.errorPasswordsDoNotMatch!);\n            reset();\n            return;\n        }\n\n        const signUpAttrs = { createdAt: new Date().toISOString() };\n        for (const currField of [\"firstName\", \"lastName\", \"fullName\", \"dateOfBirth\", \"gender\", \"phoneNumber\"]) {\n            if (signUpFields[currField]) {\n                if (formData[currField]) {\n                    signUpAttrs[currField] = \"\" + formData[currField];\n                } else {\n                    toast.error(\"Missing sign up field value\");\n                    return;\n                }\n            }\n        }\n\n        const signUpRes = await signUp(formData.email, formData.password, signUpAttrs);\n        if (signUpRes.success) {\n            setCurrentPage(\"SignIn\")\n            await signIn(formData.email, formData.password)\n        } else {\n            if (signUpRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!);\n            } else if (signUpRes.errorCode === \"BadPasswordLength\") {\n                toast.error(dictionary.errorPasswordTooShort!);\n            } else if (signUpRes.errorCode === \"UserExists\") {\n                reset();\n                toast.error(dictionary.errorUserAlreadyExists!);\n            }\n        }\n    }\n\n    const passwordReqs = {\n        minLength: {\n            value: 8,\n            message: \"Password must be at least 8 characters long\"\n        },\n        maxLength: {\n            value: 100,\n            message: \"Password too long\"\n        },\n        pattern: {\n            value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{7,}$/gm,\n            message: \"Must contain a digit and uppercase and lowercase letters\"\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signUpHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.newEmailLabel}\n                disabled={isSubmitting}\n            />\n\n            { signUpFields.firstName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"firstName\", typeof signUpFields.firstName === \"boolean\" ? {} : signUpFields.firstName)}\n                        label={dictionary.newFirstNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.firstName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.lastName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"lastName\", typeof signUpFields.lastName === \"boolean\" ? {} : signUpFields.lastName)}\n                        label={dictionary.newLastNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.lastName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.fullName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"fullName\", typeof signUpFields.fullName === \"boolean\" ? {} : signUpFields.fullName)}\n                        label={dictionary.newFullNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.fullName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.dateOfBirth &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        type=\"date\"\n                        register={() => register(\"dateOfBirth\", typeof signUpFields.dateOfBirth === \"boolean\" ? {} : signUpFields.dateOfBirth)}\n                        label={dictionary.newDateOfBirthLabel || \"\"}\n                        disabled={isSubmitting}\n                        style={{ overflow: \"hidden\" }}\n                    />\n                    <ErrorText value={errors.dateOfBirth?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.gender &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <GenderSelect\n                        register={() => register(\"gender\", typeof signUpFields.gender === \"boolean\" ? {} : signUpFields.gender)}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.gender?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.phoneNumber &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        type=\"tel\"\n                        label={dictionary.newPhoneNumberLabel || \"\"}\n                        register={() => register(\"phoneNumber\", typeof signUpFields.phoneNumber === \"boolean\" ? {} : signUpFields.phoneNumber)}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.phoneNumber?.message} />\n                </Fragment>\n            }\n\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\", passwordReqs)}\n                label={dictionary.newPasswordLabel}\n                autoComplete=\"new-password\"\n                disabled={isSubmitting}\n            />\n            <ErrorText value={errors.password?.message} />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"passwordConfirm\", passwordReqs)}\n                label={dictionary.confirmNewPasswordLabel}\n                autoComplete=\"new-password\"\n                disabled={isSubmitting}\n            />\n            <ErrorText value={errors.passwordConfirm?.message} />\n\n            <Spacer size=\"xlarge\" />\n            <SubmitButton disabled={isSubmitting}>{dictionary.signUpSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignIn\")} disabled={isSubmitting}>{dictionary.backToSignIn}</SecondaryButton>\n        </Form>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}